version: "3.9"
services:
  nodejs:
    build:
      context: ./telovpn
      dockerfile: Dockerfile
    container_name: telovpn
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - ./telovpn:/home/node/app
      - ./telovpn/node_modules:/home/node/app/node_modules
    depends_on:
      - postgres
    networks:
      - app-network

#  telegrambot:
#     build:
#      context: ./telegrambot
#      dockerfile: Dockerfile
#    container_name: telegrambot
#    restart: unless-stopped
#    volumes:
#      - ./telegrambot:/home/node/telegrambot
#      - ./telegrambot/node_modules:/home/node/telegrambot/node_modules
#    depends_on:
#      - nodejs
#    networks:
#      - app-network

  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - telo-data:/var/lib/postgresql/data
      - ./telovpn/database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - app-network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - app-network

volumes:
  telo-data:
  pgadmin-data:


networks:
  app-network:
    driver: bridge
